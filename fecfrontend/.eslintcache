[{"/Users/andrewhumphrey/Documents/code/tag/Tag_Strategies/fecfrontend/src/index.js":"1","/Users/andrewhumphrey/Documents/code/tag/Tag_Strategies/fecfrontend/src/reportWebVitals.js":"2","/Users/andrewhumphrey/Documents/code/tag/Tag_Strategies/fecfrontend/src/App.js":"3","/Users/andrewhumphrey/Documents/code/tag/Tag_Strategies/fecfrontend/src/components/Modal.js":"4","/Users/andrewhumphrey/Documents/code/tag/Tag_Strategies/fecfrontend/src/components/SearchBar.js":"5"},{"size":521,"mtime":1607373097159,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1607369028325,"results":"8","hashOfConfig":"7"},{"size":3979,"mtime":1607452336556,"results":"9","hashOfConfig":"7"},{"size":2085,"mtime":1607376735315,"results":"10","hashOfConfig":"7"},{"size":1572,"mtime":1607447993137,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"28qmar",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"14"},"/Users/andrewhumphrey/Documents/code/tag/Tag_Strategies/fecfrontend/src/index.js",[],["24","25"],"/Users/andrewhumphrey/Documents/code/tag/Tag_Strategies/fecfrontend/src/reportWebVitals.js",[],"/Users/andrewhumphrey/Documents/code/tag/Tag_Strategies/fecfrontend/src/App.js",["26"],"/Users/andrewhumphrey/Documents/code/tag/Tag_Strategies/fecfrontend/src/components/Modal.js",[],"/Users/andrewhumphrey/Documents/code/tag/Tag_Strategies/fecfrontend/src/components/SearchBar.js",["27"],"import React, { PropTypes } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nconst axios = require('axios')\n\n// const getNames = async () => {\n//   try {\n//     return await axios.get('http://localhost:8000/api/politicians/')\n//   } catch (error) {\n//     console.error(error)\n//   }\n// }\n\n// const getPoliticianNames = async () => {\n//   const politician = await getNames()\n//   let nameList = []\n//   if (politician.data) {\n//     for (let i = 0; i < politician.data.length; i++){\n//       nameList.push(politician.data[i]['name'])\n//     }\n//   return nameList\n//   }\n// }\n\nconst options = axios.get('http://localhost:8000/api/politicians/').then(function (response) {console.log(response.data)});\n\n\nexport default function ControllableStates() {\n  const [value, setValue] = React.useState(options[0]);\n  const [inputValue, setInputValue] = React.useState('');\n  return (\n    <div>\n      <div>{`value: ${value !== null ? `'${value}'` : 'null'}`}</div>\n      <div>{`inputValue: '${inputValue}'`}</div>\n      <br />\n      <Autocomplete\n        value={value}\n        onChange={(event, newValue) => {\n          setValue(newValue);\n        }}\n        inputValue={inputValue}\n        onInputChange={(event, newInputValue) => {\n          setInputValue(newInputValue);\n        }}\n        id=\"controllable-states-demo\"\n        options={options}\n        style={{ width: 300 }}\n        renderInput={(params) => <TextField {...params} label=\"Controllable\" variant=\"outlined\" />}\n      />\n    </div>\n  );\n}",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":null,"fatal":true,"severity":2,"message":"32","line":24,"column":14},{"ruleId":"33","severity":1,"message":"34","line":1,"column":17,"nodeType":"35","messageId":"36","endLine":1,"endColumn":26},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"Parsing error: Const declarations require an initialization value\n\n\u001b[0m \u001b[90m 22 | \u001b[39m  refreshList \u001b[33m=\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\u001b[0m \u001b[90m 23 | \u001b[39m    \u001b[36mconst\u001b[39m req \u001b[33m=\u001b[39m axios\u001b[33m.\u001b[39mget(\u001b[32m\"http://localhost:8000/api/politicians/\"\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 24 | \u001b[39m    \u001b[36mconst\u001b[39m res \u001b[33m=>\u001b[39m await req\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m    | \u001b[39m             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 25 | \u001b[39m    res\u001b[33m.\u001b[39mdata\u001b[33m.\u001b[39margs\u001b[0m\n\u001b[0m \u001b[90m 26 | \u001b[39m     \u001b[0m\n\u001b[0m \u001b[90m 27 | \u001b[39m  }\u001b[33m;\u001b[39m\u001b[0m","no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]